{"ast":null,"code":"var _jsxFileName = \"/Users/chendimri/Desktop/CapitalQuiz/capital-quiz/src/components/QuizBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CardsData from \"../data\";\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizBoard() {\n  _s();\n  let [cardsArray, setCardsArray] = useState();\n  // kep first card info\n  let [firstCard, setFirstCard] = useState();\n  // is it first click?\n  let [secondCard, setSecondCard] = useState();\n  // set flag to wait for 3000ms\n  let [wait, setWait] = useState(false);\n  const [won, setWon] = React.useState(0);\n\n  // functions\n  const handleSelectedCards = async card => {\n    if (firstCard !== null && card.id != (firstCard === null || firstCard === void 0 ? void 0 : firstCard.id)) {\n      setSecondCard(card);\n    } else {\n      setFirstCard(card);\n    }\n  };\n  const NewGame = () => {\n    setTimeout(() => {\n      const randomOrderArray = CardsData.sort(() => 0.5 - Math.random());\n      setCardsArray(randomOrderArray);\n      setFirstCard({});\n      setSecondCard({});\n      setWon(0);\n    }, 1200);\n  };\n  const removeSelection = () => {\n    setFirstCard({});\n    setSecondCard({});\n  };\n  React.useEffect(() => {\n    NewGame();\n  }, []);\n  React.useEffect(() => {\n    if (firstCard && secondCard) {\n      if (firstCard.name === secondCard.country || firstCard.capital == secondCard.name) {\n        setCardsArray(prevArray => {\n          return prevArray.map(item => {\n            if ((item === null || item === void 0 ? void 0 : item.id) == !(firstCard !== null && firstCard !== void 0 && firstCard.id) && item.id == !secondCard.id) {\n              return item;\n            }\n          });\n        });\n        setWon(preVal => preVal + 1);\n        removeSelection();\n      } else {\n        setTimeout(() => {\n          removeSelection();\n        }, 1000);\n      }\n    }\n  }, [firstCard, secondCard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Memory Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: // cards component help in coverting the  \n      // data from array to visible data for screen \n      cardsArray === null || cardsArray === void 0 ? void 0 : cardsArray.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        item: item,\n        handleSelectedCards: handleSelectedCards,\n        toggled: item === firstCard || item === secondCard\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), won !== (cardsArray === null || cardsArray === void 0 ? void 0 : cardsArray.length) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: \"Congratulations!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: NewGame,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizBoard, \"e5GEkUti3XUpit2vEUTB4Ll4RtI=\");\n_c = QuizBoard;\nexport default QuizBoard;\nvar _c;\n$RefreshReg$(_c, \"QuizBoard\");","map":{"version":3,"names":["React","useState","CardsData","Card","jsxDEV","_jsxDEV","QuizBoard","_s","cardsArray","setCardsArray","firstCard","setFirstCard","secondCard","setSecondCard","wait","setWait","won","setWon","handleSelectedCards","card","id","NewGame","setTimeout","randomOrderArray","sort","Math","random","removeSelection","useEffect","name","country","capital","prevArray","map","item","preVal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toggled","length","onClick","_c","$RefreshReg$"],"sources":["/Users/chendimri/Desktop/CapitalQuiz/capital-quiz/src/components/QuizBoard.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CardsData from \"../data\";\nimport Card from './Card';\n\ninterface ICard{\n    id?: number,\n    name?: string,\n    country?: string,\n    capital?: string\n}\n\nfunction QuizBoard() {\n    let [cardsArray, setCardsArray] = useState<ICard[]>();\n    // kep first card info\n    let [firstCard, setFirstCard] = useState<ICard>();\n    // is it first click?\n    let [secondCard, setSecondCard] = useState<ICard>();\n    // set flag to wait for 3000ms\n    let [wait, setWait] = useState(false);\n    const [won, setWon] = React.useState(0); \n\n\n    // functions\n    const handleSelectedCards = async (card) => {\n        if (firstCard !== null && card.id != firstCard?.id) {\n            setSecondCard(card); \n        } else { \n            setFirstCard(card);\n        }\n  };\n\n    const NewGame = () => { \n        setTimeout(() => { \n            const randomOrderArray = CardsData.sort(() => 0.5 - Math.random()); \n            setCardsArray(randomOrderArray); \n            setFirstCard({}); \n            setSecondCard({}); \n            setWon(0); \n        }, 1200); \n    }\n\n    const removeSelection = () => { \n        setFirstCard({}); \n        setSecondCard({}); \n    }\n\n    React.useEffect(() => { \n        NewGame(); \n    }, []); \n\n  React.useEffect(() => { \n    if (firstCard && secondCard) { \n        if (firstCard.name === secondCard.country || firstCard.capital == secondCard.name) { \n            setCardsArray((prevArray) => { \n                return prevArray.map((item) => { \n                    if (item?.id ==! firstCard?.id && item.id ==! secondCard.id) { \n                        return item; \n                    }\n                }); \n            }); \n            setWon((preVal) => preVal + 1); \n            removeSelection(); \n        } else { \n            setTimeout(() => { \n                removeSelection(); \n            }, 1000); \n        } \n    } \n}, [firstCard, secondCard]); \n\n    return (\n        <div className=\"container\"> \n            <div className=\"header\"> \n                <h1>Memory Game</h1> \n            </div> \n            <div className=\"board\"> \n                { \n                    // cards component help in coverting the  \n                    // data from array to visible data for screen \n                    cardsArray?.map((item) => ( \n                        <Card \n                            item={item} \n                            key={item.id} \n                            handleSelectedCards={handleSelectedCards} \n                            toggled={ \n                                item === firstCard || \n                                item === secondCard\n                            } \n                        /> \n                    )) \n                } \n            </div> \n  \n            {won !== cardsArray?.length ? ( \n                <div className=\"comments\"></div> \n            ) : ( \n                <div className=\"comments\"> \n                    Congratulations!\n                </div> \n            )} \n            <button className=\"button\" onClick={NewGame}> \n                New Game \n            </button> \n        </div> \n      ); \n}\n\nexport default QuizBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}