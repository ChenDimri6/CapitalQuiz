{"ast":null,"code":"var _jsxFileName = \"/Users/chendimri/Desktop/CapitalQuiz/src/components/QuizBoard/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n//import CardsData from \"../../data\";\nimport Card from '../Card';\nimport removeCardsFromArray from './logic/removeCardsFromArray';\nimport changeIsWrongForSelectedCards from \"./logic/changeIsWrongForSelectedCards\";\nimport Header from \"../Header\";\nimport WinningBanner from \"../WinningBanner\";\nimport getCountriesList from \"../../server/getCountriesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizBoard() {\n  _s();\n  let [cardsArray, setCardsArray] = useState();\n  let [firstCard, setFirstCard] = useState();\n  let [secondCard, setSecondCard] = useState();\n  let [toDisable, setToDisable] = useState();\n  const handleSelectedCards = async card => {\n    firstCard && card.id !== (firstCard === null || firstCard === void 0 ? void 0 : firstCard.id) ? setSecondCard(card) : setFirstCard(card);\n  };\n  const removeSelection = () => {\n    setFirstCard(null);\n    setSecondCard(null);\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      const cardsData = getCountriesList();\n      //shuffleCardsArray(CardsData);\n      setCardsArray(cardsData);\n      setFirstCard(null);\n      setSecondCard(null);\n      setToDisable(false);\n    }, 10);\n  }, []);\n  useEffect(() => {\n    if (firstCard && secondCard) {\n      if (firstCard.country === secondCard.country || firstCard.capital === secondCard.capital) {\n        setCardsArray(removeCardsFromArray(cardsArray, firstCard, secondCard));\n        removeSelection();\n      } else {\n        setCardsArray(changeIsWrongForSelectedCards(cardsArray, true, firstCard, secondCard));\n        setToDisable(true);\n        setTimeout(() => {\n          setToDisable(false);\n          setCardsArray(changeIsWrongForSelectedCards(cardsArray, false, firstCard, secondCard));\n          removeSelection();\n        }, 3000);\n      }\n    }\n  }, [firstCard, secondCard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: cardsArray === null || cardsArray === void 0 ? void 0 : cardsArray.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        item: item,\n        handleSelectedCards: handleSelectedCards,\n        isFirstCard: item === firstCard,\n        isDisabled: toDisable\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), (cardsArray === null || cardsArray === void 0 ? void 0 : cardsArray.filter(item => {\n      return !item.isMatched;\n    }).length) === 0 ? /*#__PURE__*/_jsxDEV(WinningBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizBoard, \"rs0942ufVnOFqcc8j6bbSAuG5rQ=\");\n_c = QuizBoard;\nexport default QuizBoard;\nvar _c;\n$RefreshReg$(_c, \"QuizBoard\");","map":{"version":3,"names":["React","useState","useEffect","Card","removeCardsFromArray","changeIsWrongForSelectedCards","Header","WinningBanner","getCountriesList","jsxDEV","_jsxDEV","QuizBoard","_s","cardsArray","setCardsArray","firstCard","setFirstCard","secondCard","setSecondCard","toDisable","setToDisable","handleSelectedCards","card","id","removeSelection","setTimeout","cardsData","country","capital","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","isFirstCard","isDisabled","filter","isMatched","length","_c","$RefreshReg$"],"sources":["/Users/chendimri/Desktop/CapitalQuiz/src/components/QuizBoard/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n//import CardsData from \"../../data\";\nimport Card from '../Card';\nimport removeCardsFromArray from './logic/removeCardsFromArray';\nimport changeIsWrongForSelectedCards from \"./logic/changeIsWrongForSelectedCards\";\nimport shuffleCardsArray from \"./logic/shuffleCardsArray\";\nimport Header from \"../Header\";\nimport WinningBanner from \"../WinningBanner\";\nimport ICard from \"../../interfaces/CardInterface\";\nimport getCountriesList from \"../../server/getCountriesList\";\n\nfunction QuizBoard() {\n    let [cardsArray, setCardsArray] = useState<ICard[] | null>();\n    let [firstCard, setFirstCard] = useState<ICard | null>();\n    let [secondCard, setSecondCard] = useState<ICard | null>();\n    let [toDisable, setToDisable] = useState<boolean>();\n\n    const handleSelectedCards = async (card) => {\n        firstCard && card.id !== firstCard?.id ?\n            setSecondCard(card) :  \n            setFirstCard(card);\n    };\n\n    const removeSelection = () => { \n        setFirstCard(null); \n        setSecondCard(null); \n    }\n\n    useEffect(() => { \n        setTimeout(() => { \n            const cardsData = getCountriesList();\n            //shuffleCardsArray(CardsData);\n            setCardsArray(cardsData); \n            setFirstCard(null); \n            setSecondCard(null); \n            setToDisable(false);\n        }, 10); \n    }, []); \n\n    useEffect(() => { \n        if (firstCard && secondCard) { \n            if (firstCard.country === secondCard.country || firstCard.capital === secondCard.capital) { \n                setCardsArray(removeCardsFromArray(cardsArray, firstCard, secondCard)); \n                removeSelection(); \n            } else { \n                setCardsArray(changeIsWrongForSelectedCards(cardsArray, true, firstCard, secondCard))\n                setToDisable(true);\n                \n                setTimeout(() => {\n                    setToDisable(false);\n                    setCardsArray(changeIsWrongForSelectedCards(cardsArray, false, firstCard, secondCard))\n                    removeSelection(); \n                }, 3000); \n            } \n        } \n    }, [firstCard, secondCard]); \n\n    return (\n        <div className=\"container\"> \n            <Header/>\n            <div className=\"board\"> \n                {\n                    cardsArray?.map((item) => (\n                        <Card \n                            item={item} \n                            key={item.id} \n                            handleSelectedCards={handleSelectedCards} \n                            isFirstCard={item === firstCard} \n                            isDisabled={toDisable} \n                        />\n                    )) \n                } \n            </div> \n  \n            {(cardsArray?.filter((item) => { return !item.isMatched }).length === 0) ? ( \n               <WinningBanner/>\n            ) : null} \n        </div> \n      ); \n}\n\nexport default QuizBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}