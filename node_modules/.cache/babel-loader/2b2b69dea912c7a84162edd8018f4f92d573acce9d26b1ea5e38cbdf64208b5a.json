{"ast":null,"code":"var _jsxFileName = \"/Users/chendimri/Desktop/CapitalQuiz/capital-quiz/src/components/QuizBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CardsData from \"../data\";\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizBoard() {\n  _s();\n  let [cardsArray, setCardsArray] = useState();\n  // kep first card info\n  let [firstCard, setFirstCard] = useState();\n  // is it first click?\n  let [secondCard, setSecondCard] = useState();\n\n  // functions\n  const handleSelectedCards = async card => {\n    console.log(\"check1\");\n    console.log(\"firstCard\", firstCard);\n    console.log(\"secondCard\", secondCard);\n    if (firstCard !== null && card.id != (firstCard === null || firstCard === void 0 ? void 0 : firstCard.id)) {\n      setSecondCard(card);\n    } else {\n      setFirstCard(card);\n      console.log(firstCard);\n    }\n  };\n  const shuffle = array => {\n    let currentIndex = array.length;\n\n    // While there remain elements to shuffle...\n    while (currentIndex != 0) {\n      // Pick a remaining element...\n      let randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n  };\n  const NewGame = () => {\n    setTimeout(() => {\n      setCardsArray([]);\n      const tempArray = CardsData;\n      shuffle(tempArray);\n      setCardsArray(tempArray);\n      setFirstCard({});\n      setSecondCard({});\n    }, 1200);\n  };\n  const removeSelection = () => {\n    setFirstCard({});\n    setSecondCard({});\n  };\n  useEffect(() => {\n    NewGame();\n  }, []);\n\n  // useEffect(() => { \n  //     if (firstCard && secondCard) { \n  //         if (firstCard.country === secondCard.country || firstCard.capital == secondCard.capital) { \n  //             // setCardsArray((prevArray) => { \n  //             //     if (!prevArray){\n  //             //         return prevArray;\n  //             //     }\n\n  //             //     return prevArray.map((item) => { \n  //             //         if (item.id === firstCard?.id || item.id === secondCard?.id) { \n  //             //             return { ...item, isMatched: true }; \n  //             //         } else { \n  //             //             return item; \n  //             //         } \n  //             //     }); \n  //             // }); \n\n  //             removeSelection(); \n  //         } else { \n  //             setTimeout(() => { \n  //                 removeSelection(); \n  //             }, 1000); \n  //         } \n  //     } \n  // }, [firstCard, secondCard]); \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Capital Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: // cards component help in coverting the  \n      // data from array to visible data for screen \n      cardsArray === null || cardsArray === void 0 ? void 0 : cardsArray.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        item: item,\n        handleSelectedCards: handleSelectedCards,\n        isFirstCard: item === firstCard\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), (cardsArray === null || cardsArray === void 0 ? void 0 : cardsArray.length) == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: \"Congratulations!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: NewGame,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizBoard, \"W5xliZPZtHsjrMKkbciZnPmNNeE=\");\n_c = QuizBoard;\nexport default QuizBoard;\nvar _c;\n$RefreshReg$(_c, \"QuizBoard\");","map":{"version":3,"names":["React","useState","useEffect","CardsData","Card","jsxDEV","_jsxDEV","QuizBoard","_s","cardsArray","setCardsArray","firstCard","setFirstCard","secondCard","setSecondCard","handleSelectedCards","card","console","log","id","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","NewGame","setTimeout","tempArray","removeSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","isFirstCard","onClick","_c","$RefreshReg$"],"sources":["/Users/chendimri/Desktop/CapitalQuiz/capital-quiz/src/components/QuizBoard.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CardsData from \"../data\";\nimport Card from './Card';\n\ninterface ICard{\n    id?: number,\n    name?: string,\n    country?: string,\n    capital?: string,\n    isMatched?: boolean\n}\n\nfunction QuizBoard() {\n    let [cardsArray, setCardsArray] = useState<ICard[]>();\n    // kep first card info\n    let [firstCard, setFirstCard] = useState<ICard>();\n    // is it first click?\n    let [secondCard, setSecondCard] = useState<ICard>();\n\n    // functions\n    const handleSelectedCards = async (card) => {\n        console.log(\"check1\")\n        console.log(\"firstCard\", firstCard)\n        console.log(\"secondCard\", secondCard)\n        if (firstCard !== null && card.id != firstCard?.id) {\n            setSecondCard(card); \n        } else { \n            setFirstCard(card);\n            console.log(firstCard);\n\n        }\n  };\n\n    const shuffle = (array) => {\n        let currentIndex = array.length;\n    \n        // While there remain elements to shuffle...\n        while (currentIndex != 0) {\n    \n        // Pick a remaining element...\n        let randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n    \n        // And swap it with the current element.\n        [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n        }\n    }\n\n    const NewGame = () => { \n        setTimeout(() => { \n            setCardsArray([]);\n            const tempArray = CardsData;\n            shuffle(tempArray);\n            setCardsArray(tempArray); \n            setFirstCard({}); \n            setSecondCard({}); \n        }, 1200); \n    }\n\n    const removeSelection = () => { \n        setFirstCard({}); \n        setSecondCard({}); \n    }\n\n    useEffect(() => { \n        NewGame(); \n    }, []); \n\n    // useEffect(() => { \n    //     if (firstCard && secondCard) { \n    //         if (firstCard.country === secondCard.country || firstCard.capital == secondCard.capital) { \n    //             // setCardsArray((prevArray) => { \n    //             //     if (!prevArray){\n    //             //         return prevArray;\n    //             //     }\n\n    //             //     return prevArray.map((item) => { \n    //             //         if (item.id === firstCard?.id || item.id === secondCard?.id) { \n    //             //             return { ...item, isMatched: true }; \n    //             //         } else { \n    //             //             return item; \n    //             //         } \n    //             //     }); \n    //             // }); \n                \n    //             removeSelection(); \n    //         } else { \n    //             setTimeout(() => { \n    //                 removeSelection(); \n    //             }, 1000); \n    //         } \n    //     } \n    // }, [firstCard, secondCard]); \n\n    return (\n        <div className=\"container\"> \n            <div className=\"header\"> \n                <h1>Capital Quiz</h1> \n            </div> \n            <div className=\"board\"> \n                { \n                    // cards component help in coverting the  \n                    // data from array to visible data for screen \n                    cardsArray?.map((item) => ( \n                        <Card \n                            item={item} \n                            key={item.id} \n                            handleSelectedCards={handleSelectedCards} \n                            isFirstCard={item === firstCard} \n                        /> \n                    )) \n                } \n            </div> \n  \n            {(cardsArray?.length == 0) ? ( \n               <div className=\"comments\"> \n               Congratulations!\n           </div> \n            ) : ( \n                <div></div>\n            )} \n            <button className=\"button\" onClick={NewGame}> \n                New Game \n            </button> \n        </div> \n      ); \n}\n\nexport default QuizBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}