{"ast":null,"code":"const NUM_OF_COUNTRIES_IN_QUIZ = 5;\nfunction getCountriesList() {\n  fetch('https://restcountries.com/v3.1/all?fields=name,capital').then(response => response.json()).then(data => {\n    for (const item of data) {\n      item.country = item.name.common;\n      item.capital = item.capital[0];\n    }\n    const shuffled = data.sort(() => 0.5 - Math.random());\n    let selected = shuffled.slice(0, NUM_OF_COUNTRIES_IN_QUIZ);\n    console.log(\"selected before\", selected);\n    let countriesForGame = [];\n    let counter = 0;\n    for (const country of selected) {\n      country.name = country.country;\n      country.isMatched = false;\n      country.isWrong = false;\n      country.id = counter;\n      const capital = {\n        name: country.capital,\n        country: country.country,\n        id: counter + 1,\n        isMatched: false,\n        isWrong: false,\n        capital: country.capital\n      };\n      countriesForGame.push(capital);\n      countriesForGame.push(country);\n      counter += 2;\n      console.log(\"countriesForGamer\", countriesForGame);\n    }\n  }).catch(err => {\n    console.log(err.message);\n  });\n}\nexport default getCountriesList;","map":{"version":3,"names":["NUM_OF_COUNTRIES_IN_QUIZ","getCountriesList","fetch","then","response","json","data","item","country","name","common","capital","shuffled","sort","Math","random","selected","slice","console","log","countriesForGame","counter","isMatched","isWrong","id","push","catch","err","message"],"sources":["/Users/chendimri/Desktop/CapitalQuiz/src/server/getCountriesList.ts"],"sourcesContent":["import ICard from \"../interfaces/CardInterface\";\n\nconst NUM_OF_COUNTRIES_IN_QUIZ = 5;\n\nfunction getCountriesList() {\n    fetch('https://restcountries.com/v3.1/all?fields=name,capital')\n        .then((response) => response.json())\n        .then((data) => {\n            for (const item of data) {\n                item.country = item.name.common;\n                item.capital = item.capital[0];\n            }\n\n            const shuffled = data.sort(() => 0.5 - Math.random());\n            let selected = shuffled.slice(0, NUM_OF_COUNTRIES_IN_QUIZ);\n            console.log(\"selected before\", selected)\n            let countriesForGame: ICard[] = [];\n\n            let counter = 0;\n\n            for (const country of selected) {\n                country.name = country.country;\n                country.isMatched = false;\n                country.isWrong = false;\n                country.id = counter;\n\n                const capital = { name: country.capital, country: country.country, id: counter+1, isMatched: false, isWrong: false, \n                    capital: country.capital };\n\n                countriesForGame.push(capital);\n                countriesForGame.push(country);\n                counter += 2;\n                console.log(\"countriesForGamer\", countriesForGame)\n            }\n\n        })\n        .catch((err) => {\n            console.log(err.message);\n        })\n    }\n\nexport default getCountriesList;\n"],"mappings":"AAEA,MAAMA,wBAAwB,GAAG,CAAC;AAElC,SAASC,gBAAgBA,CAAA,EAAG;EACxBC,KAAK,CAAC,wDAAwD,CAAC,CAC1DC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACZ,KAAK,MAAMC,IAAI,IAAID,IAAI,EAAE;MACrBC,IAAI,CAACC,OAAO,GAAGD,IAAI,CAACE,IAAI,CAACC,MAAM;MAC/BH,IAAI,CAACI,OAAO,GAAGJ,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;IAClC;IAEA,MAAMC,QAAQ,GAAGN,IAAI,CAACO,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;IACrD,IAAIC,QAAQ,GAAGJ,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAEjB,wBAAwB,CAAC;IAC1DkB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,QAAQ,CAAC;IACxC,IAAII,gBAAyB,GAAG,EAAE;IAElC,IAAIC,OAAO,GAAG,CAAC;IAEf,KAAK,MAAMb,OAAO,IAAIQ,QAAQ,EAAE;MAC5BR,OAAO,CAACC,IAAI,GAAGD,OAAO,CAACA,OAAO;MAC9BA,OAAO,CAACc,SAAS,GAAG,KAAK;MACzBd,OAAO,CAACe,OAAO,GAAG,KAAK;MACvBf,OAAO,CAACgB,EAAE,GAAGH,OAAO;MAEpB,MAAMV,OAAO,GAAG;QAAEF,IAAI,EAAED,OAAO,CAACG,OAAO;QAAEH,OAAO,EAAEA,OAAO,CAACA,OAAO;QAAEgB,EAAE,EAAEH,OAAO,GAAC,CAAC;QAAEC,SAAS,EAAE,KAAK;QAAEC,OAAO,EAAE,KAAK;QAC9GZ,OAAO,EAAEH,OAAO,CAACG;MAAQ,CAAC;MAE9BS,gBAAgB,CAACK,IAAI,CAACd,OAAO,CAAC;MAC9BS,gBAAgB,CAACK,IAAI,CAACjB,OAAO,CAAC;MAC9Ba,OAAO,IAAI,CAAC;MACZH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,gBAAgB,CAAC;IACtD;EAEJ,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAK;IACZT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAACC,OAAO,CAAC;EAC5B,CAAC,CAAC;AACN;AAEJ,eAAe3B,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}