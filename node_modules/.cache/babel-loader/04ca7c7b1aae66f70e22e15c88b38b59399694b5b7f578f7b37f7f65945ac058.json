{"ast":null,"code":"var _jsxFileName = \"/Users/chendimri/Desktop/CapitalQuiz/capital-quiz/src/components/QuizBoard/QuizBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CardsData from \"../../data\";\nimport Card from '../Card';\nimport removeCardsFromArray from './removeCardsFromArray';\nimport changeIsWrongForSelectedCards from \"./changeIsWrongForSelectedCards\";\nimport shuffleCardsArray from \"./shuffleCardsArray\";\nimport Header from \"./Header\";\nimport WinningBanner from \"./WinningBanner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizBoard() {\n  _s();\n  let [cardsArray, setCardsArray] = useState();\n  let [firstCard, setFirstCard] = useState();\n  let [secondCard, setSecondCard] = useState();\n  let [toDisable, setToDisable] = useState();\n  const handleSelectedCards = async card => {\n    firstCard && Object.keys(firstCard).length > 0 && card.id !== (firstCard === null || firstCard === void 0 ? void 0 : firstCard.id) ? setSecondCard(card) : setFirstCard(card);\n  };\n  const removeSelection = () => {\n    setFirstCard(null);\n    setSecondCard(null);\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      setCardsArray([]);\n      shuffleCardsArray(CardsData);\n      setCardsArray(CardsData);\n      setFirstCard(null);\n      setSecondCard(null);\n      setToDisable(false);\n    }, 1200);\n  }, []);\n  useEffect(() => {\n    if (firstCard && secondCard) {\n      if (firstCard.country === secondCard.country || firstCard.capital === secondCard.capital) {\n        setCardsArray(removeCardsFromArray(cardsArray, firstCard, secondCard));\n        removeSelection();\n      } else {\n        setCardsArray(changeIsWrongForSelectedCards(cardsArray, true, firstCard, secondCard));\n        setToDisable(true);\n        setTimeout(() => {\n          setToDisable(false);\n          setCardsArray(changeIsWrongForSelectedCards(cardsArray, false, firstCard, secondCard));\n          removeSelection();\n        }, 3000);\n      }\n    }\n  }, [firstCard, secondCard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: cardsArray === null || cardsArray === void 0 ? void 0 : cardsArray.map(item => !item.isMatched ? /*#__PURE__*/_jsxDEV(Card, {\n        item: item,\n        handleSelectedCards: handleSelectedCards,\n        isFirstCard: item === firstCard,\n        isWrongCard: item.isWrong,\n        isDisabled: toDisable\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), (cardsArray === null || cardsArray === void 0 ? void 0 : cardsArray.filter(item => {\n      return !item.isMatched;\n    }).length) == 0 ? /*#__PURE__*/_jsxDEV(WinningBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizBoard, \"rs0942ufVnOFqcc8j6bbSAuG5rQ=\");\n_c = QuizBoard;\nexport default QuizBoard;\nvar _c;\n$RefreshReg$(_c, \"QuizBoard\");","map":{"version":3,"names":["React","useState","useEffect","CardsData","Card","removeCardsFromArray","changeIsWrongForSelectedCards","shuffleCardsArray","Header","WinningBanner","jsxDEV","_jsxDEV","QuizBoard","_s","cardsArray","setCardsArray","firstCard","setFirstCard","secondCard","setSecondCard","toDisable","setToDisable","handleSelectedCards","card","Object","keys","length","id","removeSelection","setTimeout","country","capital","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","isMatched","isFirstCard","isWrongCard","isWrong","isDisabled","filter","_c","$RefreshReg$"],"sources":["/Users/chendimri/Desktop/CapitalQuiz/capital-quiz/src/components/QuizBoard/QuizBoard.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CardsData from \"../../data\";\nimport Card from '../Card';\nimport removeCardsFromArray from './removeCardsFromArray';\nimport changeIsWrongForSelectedCards from \"./changeIsWrongForSelectedCards\";\nimport shuffleCardsArray from \"./shuffleCardsArray\";\nimport Header from \"./Header\";\nimport WinningBanner from \"./WinningBanner\";\n\ninterface ICard{\n    id?: number,\n    name?: string,\n    country?: string,\n    capital?: string,\n    isMatched?: boolean,\n    isWrong?: boolean\n}\n\nfunction QuizBoard() {\n    let [cardsArray, setCardsArray] = useState<ICard[] | null>();\n    let [firstCard, setFirstCard] = useState<ICard | null>();\n    let [secondCard, setSecondCard] = useState<ICard | null>();\n    let [toDisable, setToDisable] = useState<boolean>();\n\n    const handleSelectedCards = async (card) => {\n        firstCard && Object.keys(firstCard).length > 0 && card.id !== firstCard?.id ?\n            setSecondCard(card) :  \n            setFirstCard(card);\n    };\n\n    const removeSelection = () => { \n        setFirstCard(null); \n        setSecondCard(null); \n    }\n\n    useEffect(() => { \n        setTimeout(() => { \n            setCardsArray([]);\n            shuffleCardsArray(CardsData);\n            setCardsArray(CardsData); \n            setFirstCard(null); \n            setSecondCard(null); \n            setToDisable(false);\n        }, 1200); \n    }, []); \n\n    useEffect(() => { \n        if (firstCard && secondCard) { \n            if (firstCard.country === secondCard.country || firstCard.capital === secondCard.capital) { \n                setCardsArray(removeCardsFromArray(cardsArray, firstCard, secondCard)); \n                removeSelection(); \n            } else { \n                setCardsArray(changeIsWrongForSelectedCards(cardsArray, true, firstCard, secondCard))\n                setToDisable(true);\n                \n                setTimeout(() => {\n                    setToDisable(false);\n                    setCardsArray(changeIsWrongForSelectedCards(cardsArray, false, firstCard, secondCard))\n                    removeSelection(); \n                }, 3000); \n            } \n        } \n    }, [firstCard, secondCard]); \n\n    return (\n        <div className=\"container\"> \n            <Header/>\n            <div className=\"board\"> \n                {\n                    cardsArray?.map((item) => (\n                        (!item.isMatched) ?\n                        <Card \n                            item={item} \n                            key={item.id} \n                            handleSelectedCards={handleSelectedCards} \n                            isFirstCard={item === firstCard} \n                            isWrongCard={item.isWrong}\n                            isDisabled={toDisable}\n                        /> : null\n                    )) \n                } \n            </div> \n  \n            {(cardsArray?.filter((item) => { return !item.isMatched }).length == 0) ? ( \n               <WinningBanner/>\n            ) : null} \n        </div> \n      ); \n}\n\nexport default QuizBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}